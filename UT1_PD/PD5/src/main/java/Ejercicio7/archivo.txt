La clase StringBuilder en Java se utiliza para crear y manipular cadenas de caracteres dinámicamente.es útil cuando necesitas 
realizar muchas modificaciones en las cadenas de texto, como agregar, eliminar o reemplazar caracteres. A diferencia de las cadenas String, que son inmutables y cuyas operaciones de modificación resultan en la creación de nuevos objetos String, 
las operaciones en StringBuilder modifican el mismo objeto, lo que puede ser más eficiente en términos de uso de memoria.

StringBuilder(): Construye un objeto StringBuilder vacío con una capacidad inicial predeterminada de 16 caracteres.
StringBuilder(int capacity): Construye un objeto StringBuilder vacío con la capacidad especificada.
StringBuilder(CharSequence seq): Construye un objeto StringBuilder inicializado con el contenido de la secuencia especificada.

StringBuilder sb1 = new StringBuilder(); // Constructor vacío
StringBuilder sb2 = new StringBuilder(20); // Constructor con capacidad inicial de 20
StringBuilder sb3 = new StringBuilder("Hola"); // Constructor con contenido inicial

setLength(int newLength): Establece la longitud de la secuencia de caracteres en el valor especificado. Si newLength es menor que la longitud actual, los caracteres adicionales se eliminan. 
Si newLength es mayor que la longitud actual, se agregan caracteres nulos (\0) al final de la secuencia.
StringBuilder sb = new StringBuilder("Hola Mundo");
sb.setLength(4);
System.out.println(sb); // Imprime "Hola"

ensureCapacity(int minimumCapacity): Asegura que la capacidad del StringBuilder sea al menos igual al valor especificado. 
Esto puede aumentar la capacidad del búfer interno si es necesario.
StringBuilder sb = new StringBuilder();
sb.ensureCapacity(20);

append(): Agrega los argumentos al final de la secuencia. El método append() está sobrecargado para aceptar diferentes tipos de datos.
StringBuilder sb = new StringBuilder();
sb.append("Hola").append(" ").append("Mundo");
System.out.println(sb); // Imprime "Hola Mundo"

insert(int offset, ...): Inserta los argumentos en la posición especificada en la secuencia. El método insert() está sobrecargado para aceptar diferentes tipos de datos.
StringBuilder sb = new StringBuilder("Mundo");
sb.insert(0, "Hola ");
System.out.println(sb); // Imprime "Hola Mundo"

delete(int start, int end): Elimina los caracteres en el rango especificado.
StringBuilder sb = new StringBuilder("Hola Mundo");
sb.delete(4, 9);
System.out.println(sb); // Imprime "Hola"

deleteCharAt(int index): Elimina el carácter en la posición especificada.
StringBuilder sb = new StringBuilder("Hola Mundo");
sb.deleteCharAt(4);
System.out.println(sb); // Imprime "HolaMundo"

reverse(): Invierte el contenido de la secuencia.
StringBuilder sb = new StringBuilder("Hola Mundo");
sb.reverse();
System.out.println(sb); // Imprime "odnuM aloH"



