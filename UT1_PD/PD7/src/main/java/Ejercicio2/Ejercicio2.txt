1.
    String s1 = "Hola";
    String s2 = "Hola";
    if ( s1 == s2 ) {
    System.out.println( "True" );
    } else {
    System.out.println( "False" );
    }


2.
    String s1 = new String("Hola");
    String s2 = "Hola";
    if ( s1 == s2 ) {
    System.out.println( "True" );
    } else {
    System.out.println( "False" );
    }

En el primer caso se s1 == s2 es True ya que ambos estan apuntando al mismo String.
Esto ocurre ya que en java cuando se crea un nuevo string sin la palabra clave new, este se
almacena en un lugar llamado Java String Pool, si posteriormente se crea otro string "identico" que ya estaba 
almacenado en la Java String Pool este automaticamente apuntara a ese mismo string.
En este primer caso primero se crea String s1 = "Hola", el "Hola" queda almacenado en la String Pool 
y luego cuando se crea String s2 = "Hola"; este String s2 apuntara al mismo "Hola" al ser una string indentica.

En el segundo caso el new String("Hola") crea la string en una parte diferente de la memoria, diferente al del
String Pool por lo tanto s1 == s2 ser√° false

https://www.baeldung.com/java-string-pool

Para que el caso 2 de True se puede usar el metodo intern():

String s1 = new String("Hola").intern();
String s2 = "Hola";
if (s1 == s2) {
    System.out.println("True");
} else {
    System.out.println("False");
}

en esta version correjida s1 == s2 si es True porque el .intern() hace que s1 apunte
al string "Hola" de la String Pool, que es el mismo al que apunta s2